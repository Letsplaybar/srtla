name: Helm Chart Build und Push

on:
  workflow_run:
    workflows: ["Docker Image Build und Push"]
    types:
      - completed

jobs:
  helm-chart:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: Datum als Tag extrahieren
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Repository-Namen in Kleinbuchstaben umwandeln
        id: repo-name
        run: echo "repo=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Helm installieren
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: AppVersion im Chart aktualisieren
        run: |
          sed -i "s/appVersion:.*/appVersion: \"${{ steps.date.outputs.date }}\"/" helm/Chart.yaml

      - name: Bei GitHub Container Registry anmelden
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Helm Chart bauen und pushen
        run: |
          # Chart-Namen aus Chart.yaml extrahieren
          CHART_NAME=$(grep '^name:' helm/Chart.yaml | awk '{print $2}')
          CHART_VERSION=$(grep '^version:' helm/Chart.yaml | awk '{print $2}')
          
          # Chart packen
          helm package ./helm
          
          # Chart in die GitHub Container Registry pushen
          helm push ${CHART_NAME}-${CHART_VERSION}.tgz oci://ghcr.io/${{ steps.repo-name.outputs.repo }}/chart/srt-live-server